变量的基本使用：
变量名 = 值

qq_number = "12345678"
type(qq_number) # str   use: type(name)

True False首字母要大写
True默认是1 False是0

str = "hello"
str * 50  # 输出50个hello

变量输入： input("please input your password:")  变量转换：input("123") # 123 float()


格式化输出：
%s  字符串   # name = "lijun" print("my name is %s" % name)
%d  有符号十进制整数 %06d表示输出显示位数 不足的地方使用0补全  # print("%d" % num) print("%06d" % 2)
%f 浮点数 %.02f  表示小数点只显示两位  # print("%f" % 2) print("%.2f" % 2)
%% 输出%   # print("%.2f%%" % 2)  2.00%

一个tab键 4 个空格
if判断语句：
  if 要判断的条件:
    条件成立时
  else:
    ....
    
    
逻辑运算：
  and与 or或 not非
  
  1 and 2 # 2
  1 or 2 # 1
  
  True and False # False
  True or False #True
  
  not True  # False
  not 0 # True
  not 1,3,4,,,... # false

格式：
  
随机数字：
import random 
print(random.randint(0,9))  # 0 到9的整数
random.random() # 0到1的随机小数
random.randn(5)


```
  1 
  2 import random
  3 
  4 player = int(input("请输入你要出的拳 石头(1) 剪刀(2) 布(3):"))
  5 
  6 computer = random.randint(1,3)
  7 
  8 
  9 # print("玩家选择的拳头是: %d - 电脑出的拳 %d " % (player, computer))
 10 
 11 if (player == 1 and computer == 2) or (player == 2 and computer == 3):
 12     print("欧耶 电脑弱爆了")
 13 elif player == computer:
 14     print("平局")
 15 else:
 16     print("不服气，再来")
 17 
```
 i++ 没有 有 +=  
i = 0
sum = 0
while i <= 100:
  i += 1
  sum += i
print(sum)

for num in [1,2,3,4]
for num in range(1,101) # 1--100
函数： 就是封装了一对代码 函数注释里面只能用要引号注释不能用井号 只能用三个连续的引号
  def main():
    print("hello")
    
 
元组和列表：
`模块是pythonn程序架构的核心概念
模块就是好比是一个工具包，要想使用这个工具包 就需要导入import这个模块
每一扩展名py结尾py 源代码就是一个模块

每一个模块体验：
文件名
全小写,可使用下划线
数字不能开头

模块名规则：
  1.可以有字母和，下划线，数字组成
  2.不能以数字开头
  3.不能与关键字重名
  
pyc文件： c是compiled

导入之后自动生产pyc编译之后的文件

高级变量类型：
  列表：一个序列 list(列表) 相当于数组 存储一串信息 name_list = ["list", "wangwu"] 索引：
  元组：一个序列  放什么都可以 name = (["first", "Google"], ["second", "yahoo])  # website = dict(name)  元组是括号组成的
  字典：一个序列 相当于有键值对 {"first": "Google", "second": "yahhoo"}
  字符串：一个序列
  公共方法：
  变量高级：

name_list = ['one', 'two', 'three']
len(name_list)
name_list.append
name_list.clear

name_list2 = name_list.copy()
name_list.index('1')  # 查询里面有没有值
name_list.insert(3, '3')

name_list.pop() 找出最大的值
Python count() 方法用于统计字符串里某个字符出现的次数。可选参数为在字符串搜索的开始与结束位置。
extend() 函数用于在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）。


